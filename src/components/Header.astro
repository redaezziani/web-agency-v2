---
import { Image } from "astro:assets";


const navLinks = [
    {
        name: 'Home',
        href: '/#',
        label: '#',
    },
    {
        name: 'About',
        href: '/#about',
        label: 'about',
    },
    {
        name: 'Services',
        href: '/#services',
        label: 'services',
    },
    {
        name: 'Pricing',
        href: '/#pricing',
        label: 'pricing',
    },
    {
        name: 'Contact',
        href: '/#contact',
        label: 'contact',
    },
];

---
<header
    class="fixed top-0 z-[99] border-b border-slate-400/35 w-full left-0 bg-white px-3 lg:px-6 py-4 flex justify-center items-center"
>
    <nav class="w-full justify-between items-center flex lg:max-w-[80%]">
       <a
       class=" flex justify-start items-center gap-1"
       href="/">
        <Image
        width={20}
        height={20}
        src="/icon.png"
        alt="web site logo"
        />
        <h1 class="font-bold text-primary text-xl uppercase">Agency</h1>
       </a>

        <ul class="hidden lg:flex gap-6">
            {
                navLinks.map((link) => {
                    return (
                        <li class=" text-slate-500 text-sm focus:text-primary transition-all ease-in-out duration-300 cursor-pointer">
                            <a
                             aria-label={link.label}
                             href={`${link.href}`}
                             >{link.name}</a>
                        </li>
                    );
                })
            }
        </ul>

        <button
            x-data=""
            x-on:click="$dispatch('side-bar-open')"
            class="lg:hidden border  text-slate-500 border-slate-400/35 focus:border-primary focus:outline-primary focus:outline-2 focus:outline-offset-2 p-1 rounded-md"
        >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"  fill="none">
            <path d="M4 5L14 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M4 12L20 12" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M4 19L20 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
        </button>
    </nav>
</header>


<script>
    // Use a standard event like 'DOMContentLoaded'
    document.addEventListener("DOMContentLoaded", () => {
      const sections = document.querySelectorAll("section"); // Ensure sections exist on your page
      const navItems = document.querySelectorAll("header nav a");
  
      const callback = (entries:any) => {
        entries.forEach((entry:any) => {
          if (entry.isIntersecting) {
            navItems.forEach((item) => {
              if (item.getAttribute("aria-label") === entry.target.id) {
                item.classList.add("text-secondary-first");
              } else {
                
                item.classList.remove("text-secondary-first");
                // else remove the class and add it to the home link
                if (entry.target.id === "home") {
                  navItems[0].classList.add("text-primary");
                }
              }
            });
          }
        });
      };
  
      const observer = new IntersectionObserver(callback, {
        root: null,
        rootMargin: "100px",
        threshold: 0.7,
      });
  
      sections.forEach((section) => {
        observer.observe(section);
      });
  
      // Cleanup function to disconnect observer when not needed
      document.onvisibilitychange = () => {
        if (document.visibilityState === "hidden") {
          observer.disconnect();
        } else {
          sections.forEach((section) => {
            observer.observe(section);
          });
        }
      };
    });
  </script>
  

